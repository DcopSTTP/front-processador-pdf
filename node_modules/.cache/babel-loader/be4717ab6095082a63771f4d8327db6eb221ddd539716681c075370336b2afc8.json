{"ast":null,"code":"import*as HttpService from'../HttpService';// auth \nexport const login=async body=>{try{const{data,status}=await HttpService.post('/auth/signin',body);if(status===200||status===201){localStorage.setItem(\"nome\",data.nome);localStorage.setItem(\"email\",data.email||\"\");localStorage.setItem(\"cpf\",data.cpf);if(data.id){localStorage.setItem(\"userId\",data.id);}if(data.access_token){localStorage.setItem(\"access_token\",data.access_token);localStorage.setItem(\"loginTime\",new Date().getTime().toString());}if(data.tipoUser){localStorage.setItem(\"acesso\",data.tipoUser);}}else{throw new Error('Falha na autenticação');}return{data,status};}catch(error){var _error$response,_error$response$data,_error$response2;const customError=new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Erro ao fazer login');customError.status=(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status;throw customError;}};export const esqueciSenha=async cpf=>{try{const body={cpf};const{data,status}=await HttpService.postWithoutAuth('/auth/esqueci-a-senha',body);if(status===200||status===201){return{data,status};}else{throw new Error('Falha na solicitação de recuperação');}}catch(error){var _error$response3,_error$response3$data;throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||error.message||'Erro ao solicitar recuperação de senha');}};export const redefinirSenha=async(resetCode,newPassword)=>{try{const body={resetCode,newPassword};const{data,status}=await HttpService.postWithoutAuth('/auth/redefinir-senha',body);if(status===200||status===201){return{data,status};}else{throw new Error('Falha na redefinição de senha');}}catch(error){var _error$response4,_error$response4$data;throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Erro ao redefinir senha');}};export const cadastro=async userData=>{try{const{data,status}=await HttpService.post('/auth/cadastro',userData);if(status===200||status===201){return{data,status};}else{throw new Error('Falha no cadastro');}}catch(error){var _error$response5,_error$response5$data;throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Erro ao cadastrar usuário');}};export const buscarUsuarios=async()=>{try{const data=await HttpService.get('/user');return data;}catch(error){throw new Error(error.message||'Erro ao carregar usuários');}};export const alterarTipoUsuario=async(userId,isAdmin)=>{try{const{data,status}=await HttpService.put(\"/user/admin/\".concat(userId),{isAdmin});if(status===200||status===201){return{data,status};}else{throw new Error('Falha ao alterar tipo de usuário');}}catch(error){var _error$response6,_error$response6$data;throw new Error(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Erro ao alterar tipo de usuário');}};export const alterarStatusUsuario=async(userId,ativo)=>{try{const{data,status}=await HttpService.put(\"/user/status/\".concat(userId),{ativo});if(status===200||status===201){return{data,status};}else{throw new Error('Falha ao alterar status do usuário');}}catch(error){var _error$response7,_error$response7$data;throw new Error(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Erro ao alterar status do usuário');}};// Ocorrências\nexport const salvarOcorrencia=async ocorrenciaData=>{try{const{data,status}=await HttpService.post('/ocorrencias',ocorrenciaData);if(status===200||status===201){return{data,status};}else{throw new Error('Falha ao salvar ocorrência');}}catch(error){var _error$response8,_error$response8$data;throw new Error(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Erro ao salvar ocorrência');}};export const buscarEstatisticas=async()=>{try{const data=await HttpService.get('/ocorrencias/statistics');return data;}catch(error){throw new Error(error.message||'Erro ao carregar estatísticas');}};export const buscarEstatisticasMensais=async(ano,mes)=>{try{const body={ano,mes};const{data}=await HttpService.post('/ocorrencias/statistics/monthly',body);return data;}catch(error){var _error$response9,_error$response9$data;throw new Error(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.message)||error.message||'Erro ao carregar estatísticas mensais');}};// usuário\nexport const buscarPerfilUsuario=async userId=>{try{const data=await HttpService.get(\"/auth/user/\".concat(userId));return data;}catch(error){var _error$response0,_error$response0$data;throw new Error(((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.message)||error.message||'Erro ao carregar perfil do usuário');}};export const atualizarPerfilUsuario=async camposAlterados=>{try{const{data,status}=await HttpService.put('/auth/me',camposAlterados);if(status===200||status===201){if(camposAlterados.nome){localStorage.setItem(\"nome\",camposAlterados.nome);}if(camposAlterados.email){localStorage.setItem(\"email\",camposAlterados.email);}return{data,status};}else{throw new Error('Falha ao atualizar perfil');}}catch(error){var _error$response1,_error$response1$data;throw new Error(((_error$response1=error.response)===null||_error$response1===void 0?void 0:(_error$response1$data=_error$response1.data)===null||_error$response1$data===void 0?void 0:_error$response1$data.message)||error.message||'Erro ao atualizar perfil do usuário');}};export const buscarOcorrenciasFiltradas=async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const body={};if(filtros.dataInicial){const[ano,mes,dia]=filtros.dataInicial.split('-');body.dataInicial=\"\".concat(dia,\"/\").concat(mes,\"/\").concat(ano);}if(filtros.dataFinal){const[ano,mes,dia]=filtros.dataFinal.split('-');body.dataFinal=\"\".concat(dia,\"/\").concat(mes,\"/\").concat(ano);}if(filtros.natureza){body.natureza=filtros.natureza;}if(filtros.logradouro){body.logradouro=filtros.logradouro;}if(filtros.bairro){body.bairro=filtros.bairro;}const{data}=await HttpService.post('/ocorrencias/filtro',body);const dadosProcessados=data.map(ocorrencia=>{var _ocorrencia$natureza,_ocorrencia$empenhos,_ocorrencia$empenhos$,_ocorrencia$localizac,_ocorrencia$localizac2;return{id:ocorrencia.id,numeroOcorrencia:ocorrencia.numeroOcorrencia,natureza:((_ocorrencia$natureza=ocorrencia.natureza)===null||_ocorrencia$natureza===void 0?void 0:_ocorrencia$natureza.replace(/\\s+/g,' ').trim())||'Não informado',createdAt:ocorrencia.createdAt,dataDespacho:((_ocorrencia$empenhos=ocorrencia.empenhos)===null||_ocorrencia$empenhos===void 0?void 0:(_ocorrencia$empenhos$=_ocorrencia$empenhos[0])===null||_ocorrencia$empenhos$===void 0?void 0:_ocorrencia$empenhos$.despachado)||null,localizacao:{bairro:((_ocorrencia$localizac=ocorrencia.localizacao)===null||_ocorrencia$localizac===void 0?void 0:(_ocorrencia$localizac2=_ocorrencia$localizac.bairro)===null||_ocorrencia$localizac2===void 0?void 0:_ocorrencia$localizac2.replace(/^:\\s*/,'').replace(/\\s+/g,' ').trim())||'Não informado'},empenhos:ocorrencia.empenhos};});return dadosProcessados;}catch(error){var _error$response10,_error$response12,_error$response12$dat;if(((_error$response10=error.response)===null||_error$response10===void 0?void 0:_error$response10.status)===404){var _error$response11,_error$response11$dat;const errorMessage=((_error$response11=error.response)===null||_error$response11===void 0?void 0:(_error$response11$dat=_error$response11.data)===null||_error$response11$dat===void 0?void 0:_error$response11$dat.message)||'';if(errorMessage.includes('index.html')||errorMessage.includes('uploads')){throw new Error('Erro no backend: O servidor está tentando servir arquivos estáticos em vez da API. Verifique a configuração das rotas no backend.');}throw new Error('Endpoint /ocorrencias/filtro não encontrado. Verifique se o backend está rodando corretamente.');}throw new Error(((_error$response12=error.response)===null||_error$response12===void 0?void 0:(_error$response12$dat=_error$response12.data)===null||_error$response12$dat===void 0?void 0:_error$response12$dat.message)||error.message||'Erro ao carregar ocorrências');}};export const buscarOcorrenciaPorId=async id=>{try{const data=await HttpService.get(\"/ocorrencias/\".concat(id));return data;}catch(error){var _error$response13,_error$response14,_error$response14$dat;if(((_error$response13=error.response)===null||_error$response13===void 0?void 0:_error$response13.status)===404){throw new Error('Ocorrência não encontrada. Verifique se o ID está correto.');}throw new Error(((_error$response14=error.response)===null||_error$response14===void 0?void 0:(_error$response14$dat=_error$response14.data)===null||_error$response14$dat===void 0?void 0:_error$response14$dat.message)||error.message||'Erro ao carregar detalhes da ocorrência');}};","map":{"version":3,"names":["HttpService","login","body","data","status","post","localStorage","setItem","nome","email","cpf","id","access_token","Date","getTime","toString","tipoUser","Error","error","_error$response","_error$response$data","_error$response2","customError","response","message","esqueciSenha","postWithoutAuth","_error$response3","_error$response3$data","redefinirSenha","resetCode","newPassword","_error$response4","_error$response4$data","cadastro","userData","_error$response5","_error$response5$data","buscarUsuarios","get","alterarTipoUsuario","userId","isAdmin","put","concat","_error$response6","_error$response6$data","alterarStatusUsuario","ativo","_error$response7","_error$response7$data","salvarOcorrencia","ocorrenciaData","_error$response8","_error$response8$data","buscarEstatisticas","buscarEstatisticasMensais","ano","mes","_error$response9","_error$response9$data","buscarPerfilUsuario","_error$response0","_error$response0$data","atualizarPerfilUsuario","camposAlterados","_error$response1","_error$response1$data","buscarOcorrenciasFiltradas","filtros","arguments","length","undefined","dataInicial","dia","split","dataFinal","natureza","logradouro","bairro","dadosProcessados","map","ocorrencia","_ocorrencia$natureza","_ocorrencia$empenhos","_ocorrencia$empenhos$","_ocorrencia$localizac","_ocorrencia$localizac2","numeroOcorrencia","replace","trim","createdAt","dataDespacho","empenhos","despachado","localizacao","_error$response10","_error$response12","_error$response12$dat","_error$response11","_error$response11$dat","errorMessage","includes","buscarOcorrenciaPorId","_error$response13","_error$response14","_error$response14$dat"],"sources":["/Users/lohuamalima/Desktop/sttp/ocorrencias-de-transito/src/service/UserService/index.js"],"sourcesContent":["import * as HttpService from '../HttpService';\n\n\n// auth \nexport const login = async (body) => {\n    try {\n      const { data, status } = await HttpService.post('/auth/signin', body);\n  \n      if (status === 200 || status === 201) {\n        localStorage.setItem(\"nome\", data.nome);\n        localStorage.setItem(\"email\", data.email || \"\");\n        localStorage.setItem(\"cpf\", data.cpf);\n        if (data.id) {\n          localStorage.setItem(\"userId\", data.id);\n        }\n        if (data.access_token) {\n          localStorage.setItem(\"access_token\", data.access_token);\n          localStorage.setItem(\"loginTime\", new Date().getTime().toString());\n        }\n        if (data.tipoUser) {\n          localStorage.setItem(\"acesso\", data.tipoUser);\n        }\n      } else {\n        throw new Error('Falha na autenticação');\n      }\n  \n      return { data, status };\n    } catch (error) {\n      const customError = new Error(error.response?.data?.message || 'Erro ao fazer login');\n      customError.status = error.response?.status;\n      throw customError;\n    }\n  }\nexport const esqueciSenha = async (cpf) => {\n    try {\n        const body = { cpf };\n        const { data, status } = await HttpService.postWithoutAuth('/auth/esqueci-a-senha', body);\n        \n        if (status === 200 || status === 201) {\n            return { data, status };\n        } else {\n            throw new Error('Falha na solicitação de recuperação');\n        }\n    } catch (error) {\n        throw new Error(error.response?.data?.message || error.message || 'Erro ao solicitar recuperação de senha');\n    }\n}\nexport const redefinirSenha = async (resetCode, newPassword) => {\n    try {\n        const body = { resetCode, newPassword };\n        const { data, status } = await HttpService.postWithoutAuth('/auth/redefinir-senha', body);\n        \n        if (status === 200 || status === 201) {\n            return { data, status };\n        } else {\n            throw new Error('Falha na redefinição de senha');\n        }\n    } catch (error) {\n        throw new Error(error.response?.data?.message || 'Erro ao redefinir senha');\n    }\n}\nexport const cadastro = async (userData) => {\n    try {\n        const { data, status } = await HttpService.post('/auth/cadastro', userData);\n        \n        if (status === 200 || status === 201) {\n            return { data, status };\n        } else {\n            throw new Error('Falha no cadastro');\n        }\n    } catch (error) {\n        throw new Error(error.response?.data?.message || 'Erro ao cadastrar usuário');\n    }\n};\nexport const buscarUsuarios = async () => {\n    try {\n        const data = await HttpService.get('/user');\n        return data;\n    } catch (error) {\n        throw new Error(error.message || 'Erro ao carregar usuários');\n    }\n};\nexport const alterarTipoUsuario = async (userId, isAdmin) => {\n    try {\n        const { data, status } = await HttpService.put(`/user/admin/${userId}`, { isAdmin });\n        \n        if (status === 200 || status === 201) {\n            return { data, status };\n        } else {\n            throw new Error('Falha ao alterar tipo de usuário');\n        }\n    } catch (error) {\n        throw new Error(error.response?.data?.message || 'Erro ao alterar tipo de usuário');\n    }\n};\nexport const alterarStatusUsuario = async (userId, ativo) => {\n    try {\n        const { data, status } = await HttpService.put(`/user/status/${userId}`, { ativo });\n        \n        if (status === 200 || status === 201) {\n            return { data, status };\n        } else {\n            throw new Error('Falha ao alterar status do usuário');\n        }\n    } catch (error) {\n        throw new Error(error.response?.data?.message || 'Erro ao alterar status do usuário');\n    }\n};\n\n// Ocorrências\nexport const salvarOcorrencia = async (ocorrenciaData) => {\n    try {\n        const { data, status } = await HttpService.post('/ocorrencias', ocorrenciaData);\n        \n        if (status === 200 || status === 201) {\n            return { data, status };\n        } else {\n            throw new Error('Falha ao salvar ocorrência');\n        }\n    } catch (error) {\n        throw new Error(error.response?.data?.message || 'Erro ao salvar ocorrência');\n    }\n};\n\nexport const buscarEstatisticas = async () => {\n    try {\n        const data = await HttpService.get('/ocorrencias/statistics');\n        return data;\n    } catch (error) {\n        throw new Error(error.message || 'Erro ao carregar estatísticas');\n    }\n};\n\nexport const buscarEstatisticasMensais = async (ano, mes) => {\n    try {\n        const body = { ano, mes };\n        const { data } = await HttpService.post('/ocorrencias/statistics/monthly', body);\n        return data;\n    } catch (error) {\n        throw new Error(error.response?.data?.message || error.message || 'Erro ao carregar estatísticas mensais');\n    }\n};\n\n// usuário\nexport const buscarPerfilUsuario = async (userId) => {\n    try {\n        const data = await HttpService.get(`/auth/user/${userId}`);\n        return data;\n    } catch (error) {\n        throw new Error(error.response?.data?.message || error.message || 'Erro ao carregar perfil do usuário');\n    }\n};\n\nexport const atualizarPerfilUsuario = async (camposAlterados) => {\n    try {\n        const { data, status } = await HttpService.put('/auth/me', camposAlterados);\n        \n        if (status === 200 || status === 201) {\n            if (camposAlterados.nome) {\n                localStorage.setItem(\"nome\", camposAlterados.nome);\n            }\n            if (camposAlterados.email) {\n                localStorage.setItem(\"email\", camposAlterados.email);\n            }\n            \n            return { data, status };\n        } else {\n            throw new Error('Falha ao atualizar perfil');\n        }\n    } catch (error) {\n        throw new Error(error.response?.data?.message || error.message || 'Erro ao atualizar perfil do usuário');\n    }\n};\n\nexport const buscarOcorrenciasFiltradas = async (filtros = {}) => {\n    try {\n        const body = {};\n        \n        if (filtros.dataInicial) {\n            const [ano, mes, dia] = filtros.dataInicial.split('-');\n            body.dataInicial = `${dia}/${mes}/${ano}`;\n        }\n        if (filtros.dataFinal) {\n            const [ano, mes, dia] = filtros.dataFinal.split('-');\n            body.dataFinal = `${dia}/${mes}/${ano}`;\n        }\n        if (filtros.natureza) {\n            body.natureza = filtros.natureza;\n        }\n        if (filtros.logradouro) {\n            body.logradouro = filtros.logradouro;\n        }\n        if (filtros.bairro) {\n            body.bairro = filtros.bairro;\n        }\n        \n        \n        const { data } = await HttpService.post('/ocorrencias/filtro', body);\n        \n        const dadosProcessados = data.map(ocorrencia => ({\n            id: ocorrencia.id,\n            numeroOcorrencia: ocorrencia.numeroOcorrencia,\n            natureza: ocorrencia.natureza?.replace(/\\s+/g, ' ').trim() || 'Não informado',\n            createdAt: ocorrencia.createdAt,\n            dataDespacho: ocorrencia.empenhos?.[0]?.despachado || null,\n            localizacao: {\n                bairro: ocorrencia.localizacao?.bairro?.replace(/^:\\s*/, '').replace(/\\s+/g, ' ').trim() || 'Não informado'\n            },\n            empenhos: ocorrencia.empenhos\n        }));\n        \n        return dadosProcessados;\n    } catch (error) {\n        \n        if (error.response?.status === 404) {\n            const errorMessage = error.response?.data?.message || '';\n            if (errorMessage.includes('index.html') || errorMessage.includes('uploads')) {\n                throw new Error('Erro no backend: O servidor está tentando servir arquivos estáticos em vez da API. Verifique a configuração das rotas no backend.');\n            }\n            throw new Error('Endpoint /ocorrencias/filtro não encontrado. Verifique se o backend está rodando corretamente.');\n        }\n        \n        throw new Error(error.response?.data?.message || error.message || 'Erro ao carregar ocorrências');\n    }\n};\n\nexport const buscarOcorrenciaPorId = async (id) => {\n    try {\n        const data = await HttpService.get(`/ocorrencias/${id}`);\n        \n        return data;\n    } catch (error) {\n        \n        if (error.response?.status === 404) {\n            throw new Error('Ocorrência não encontrada. Verifique se o ID está correto.');\n        }\n        \n        throw new Error(error.response?.data?.message || error.message || 'Erro ao carregar detalhes da ocorrência');\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}