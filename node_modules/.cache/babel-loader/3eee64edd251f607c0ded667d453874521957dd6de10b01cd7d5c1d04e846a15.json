{"ast":null,"code":"// Funções para manipulação e processamento de PDF\nexport const loadPDFJS=()=>{return new Promise((resolve,reject)=>{if(window.pdfjsLib){resolve();return;}const script=document.createElement('script');script.src='https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js';script.onload=()=>{if(window.pdfjsLib){resolve();}else{reject(new Error('Falha ao carregar PDF.js'));}};script.onerror=()=>reject(new Error('Erro ao carregar PDF.js'));document.head.appendChild(script);});};export const extractDataFromPDF=async file=>{try{// Carregar PDF.js via script tag\nif(!window.pdfjsLib){await loadPDFJS();}// Configurar worker\nwindow.pdfjsLib.GlobalWorkerOptions.workerSrc='https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';// Converter arquivo para ArrayBuffer\nconst arrayBuffer=await file.arrayBuffer();// Carregar PDF\nconst pdf=await window.pdfjsLib.getDocument(arrayBuffer).promise;let fullText='';// Extrair texto de todas as páginas\nfor(let i=1;i<=pdf.numPages;i++){const page=await pdf.getPage(i);const textContent=await page.getTextContent();const pageText=textContent.items.map(item=>item.str).join(' ');fullText+=pageText+'\\n';}// Processar texto extraído usando regex e parsing manual\nconst extractedData=parseOccurrenceData(fullText);return extractedData;}catch(error){throw new Error('Falha ao processar o PDF: '+error.message);}};// Função para transformar dados extraídos no formato esperado pelo backend\nexport const formatDataForBackend=extractedData=>{var _extractedData$dadosL,_extractedData$dadosL2,_extractedData$dadosL3,_extractedData$dadosL4,_extractedData$dadosL5;const backendData={numeroOcorrencia:extractedData.numeroOcorrencia||'',natureza:extractedData.naturezaInicial||'',narrativas:extractedData.narrativas||'',localizacao:{logradouro:((_extractedData$dadosL=extractedData.dadosLocalizacao1)===null||_extractedData$dadosL===void 0?void 0:_extractedData$dadosL.logradouro)||'',bairro:((_extractedData$dadosL2=extractedData.dadosLocalizacao1)===null||_extractedData$dadosL2===void 0?void 0:_extractedData$dadosL2.bairro)||'',pontoReferencia:((_extractedData$dadosL3=extractedData.dadosLocalizacao2)===null||_extractedData$dadosL3===void 0?void 0:_extractedData$dadosL3.pontoReferencia)||'',lat:((_extractedData$dadosL4=extractedData.dadosLocalizacao2)===null||_extractedData$dadosL4===void 0?void 0:_extractedData$dadosL4.latitude)||'',long:((_extractedData$dadosL5=extractedData.dadosLocalizacao2)===null||_extractedData$dadosL5===void 0?void 0:_extractedData$dadosL5.longitude)||''},empenhos:[],relatos:''};// Processar empenhos se existirem dados\nif(extractedData.empenhos&&extractedData.empenhos.vtr!=='Ocorrência Não Empenhada'){const empenhoData={vtr:extractedData.empenhos.vtr||'',equipamentos:extractedData.empenhos.equipamentos||'',despachado:extractedData.empenhos.despachado||'',deslocamento:extractedData.empenhos.deslocamento||'',chegadaLocal:extractedData.empenhos.chegadaLocal||'',liberado:extractedData.empenhos.liberado||''};backendData.empenhos.push(empenhoData);}// Processar relatos - agora como string simples\nif(extractedData.relatos&&extractedData.relatos!=='Nenhum relato adicional'){backendData.relatos=extractedData.relatos;}return backendData;};export const saveDataToBackend=async extractedData=>{try{// Importar o service dinamicamente para evitar problemas de dependência circular\nconst{salvarOcorrencia}=await import('../service/UserService');// Transformar dados para o formato esperado pelo backend\nconst formattedData=formatDataForBackend(extractedData);// Log para debug - mostrar como ficou o JSON\n// Usar o service para manter a padronização e incluir o token automaticamente\nconst result=await salvarOcorrencia(formattedData);// Log da resposta do backend\nreturn result;}catch(error){throw new Error('Falha ao salvar dados no sistema: '+error.message);}};export const generateNewPDF=async data=>{try{var _data$dadosLocalizaca,_data$dadosLocalizaca2,_data$dadosLocalizaca3,_data$dadosLocalizaca4,_data$dadosLocalizaca5,_data$dadosLocalizaca6,_data$dadosLocalizaca7,_data$dadosLocalizaca8,_data$dadosLocalizaca9,_data$dadosLocalizaca0,_data$dadosLocalizaca1,_data$empenhos,_data$empenhos2,_data$empenhos3,_data$empenhos4,_data$empenhos5,_data$empenhos6;const htmlContent=\"\\n<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <title>Relat\\xF3rio de Ocorr\\xEAncia</title>\\n    <style>\\n        body {\\n            font-family: Arial, sans-serif;\\n            margin: 0;\\n            padding: 20px;\\n            font-size: 12px;\\n            line-height: 1.4;\\n        }\\n        .header {\\n            text-align: center;\\n            margin-bottom: 30px;\\n            border-bottom: 2px solid #333;\\n            padding-bottom: 15px;\\n        }\\n        .header h1 {\\n            margin: 0;\\n            font-size: 18px;\\n            color: #333;\\n        }\\n        .header p {\\n            margin: 5px 0;\\n            color: #666;\\n        }\\n        .section {\\n            margin-bottom: 20px;\\n            page-break-inside: avoid;\\n        }\\n        .section-title {\\n            background-color: #f0f0f0;\\n            padding: 8px 12px;\\n            font-weight: bold;\\n            border-left: 4px solid #2563eb;\\n            margin-bottom: 10px;\\n        }\\n        .field-group {\\n            display: flex;\\n            flex-wrap: wrap;\\n            gap: 15px;\\n            margin-bottom: 10px;\\n        }\\n        .field {\\n            flex: 1;\\n            min-width: 200px;\\n        }\\n        .field-label {\\n            font-weight: bold;\\n            color: #333;\\n        }\\n        .field-value {\\n            color: #555;\\n            margin-top: 2px;\\n        }\\n        .full-width {\\n            width: 100%;\\n        }\\n        .footer {\\n            margin-top: 40px;\\n            text-align: center;\\n            font-size: 10px;\\n            color: #888;\\n            border-top: 1px solid #ddd;\\n            padding-top: 10px;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"header\\\">\\n        <h1>Central de Atendimento e Despacho</h1>\\n        <p>Superintend\\xEAncia de Tr\\xE2nsito e Transportes P\\xFAblicos</p>\\n        <p>Relat\\xF3rio de Ocorr\\xEAncia Reorganizado</p>\\n        <p><strong>Ocorr\\xEAncia N\\xB0:</strong> \".concat(data.numeroOcorrencia||'Não informado',\"</p>\\n        <p><strong>Data/Hora:</strong> \").concat(data.dataHora||'Não informado',\"</p>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">1. NATUREZA INICIAL</div>\\n        <div class=\\\"field\\\">\\n            <div class=\\\"field-label\\\">Natureza:</div>\\n            <div class=\\\"field-value\\\">\").concat(data.naturezaInicial||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">2. NARRATIVAS</div>\\n        <div class=\\\"field full-width\\\">\\n            <div class=\\\"field-label\\\">Descri\\xE7\\xE3o:</div>\\n            <div class=\\\"field-value\\\">\").concat(data.narrativas||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">3. DADOS DA LOCALIZA\\xC7\\xC3O (PRINCIPAL)</div>\\n        <div class=\\\"field-group\\\">\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Munic\\xEDpio:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca=data.dadosLocalizacao1)===null||_data$dadosLocalizaca===void 0?void 0:_data$dadosLocalizaca.municipio)||'Não informado',\"</div>\\n            </div>\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Logradouro:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca2=data.dadosLocalizacao1)===null||_data$dadosLocalizaca2===void 0?void 0:_data$dadosLocalizaca2.logradouro)||'Não informado',\"</div>\\n            </div>\\n        </div>\\n        <div class=\\\"field-group\\\">\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Bairro:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca3=data.dadosLocalizacao1)===null||_data$dadosLocalizaca3===void 0?void 0:_data$dadosLocalizaca3.bairro)||'Não informado',\"</div>\\n            </div>\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Complemento:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca4=data.dadosLocalizacao1)===null||_data$dadosLocalizaca4===void 0?void 0:_data$dadosLocalizaca4.complemento)||'Não informado',\"</div>\\n            </div>\\n        </div>\\n        <div class=\\\"field\\\">\\n            <div class=\\\"field-label\\\">Tipo de Local:</div>\\n            <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca5=data.dadosLocalizacao1)===null||_data$dadosLocalizaca5===void 0?void 0:_data$dadosLocalizaca5.tipoLocal)||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">4. DADOS DA LOCALIZA\\xC7\\xC3O (DETALHES)</div>\\n        <div class=\\\"field-group\\\">\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Tipo de Via:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca6=data.dadosLocalizacao2)===null||_data$dadosLocalizaca6===void 0?void 0:_data$dadosLocalizaca6.tipoVia)||'Não informado',\"</div>\\n            </div>\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">N\\xFAmero:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca7=data.dadosLocalizacao2)===null||_data$dadosLocalizaca7===void 0?void 0:_data$dadosLocalizaca7.numero)||'Não informado',\"</div>\\n            </div>\\n        </div>\\n        <div class=\\\"field-group\\\">\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">CEP:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca8=data.dadosLocalizacao2)===null||_data$dadosLocalizaca8===void 0?void 0:_data$dadosLocalizaca8.cep)||'Não informado',\"</div>\\n            </div>\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Ponto de Refer\\xEAncia:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca9=data.dadosLocalizacao2)===null||_data$dadosLocalizaca9===void 0?void 0:_data$dadosLocalizaca9.pontoReferencia)||'Não informado',\"</div>\\n            </div>\\n        </div>\\n        <div class=\\\"field-group\\\">\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Latitude:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca0=data.dadosLocalizacao2)===null||_data$dadosLocalizaca0===void 0?void 0:_data$dadosLocalizaca0.latitude)||'Não informado',\"</div>\\n            </div>\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Longitude:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$dadosLocalizaca1=data.dadosLocalizacao2)===null||_data$dadosLocalizaca1===void 0?void 0:_data$dadosLocalizaca1.longitude)||'Não informado',\"</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">5. EMPENHOS - VTR E EQUIPAMENTOS</div>\\n        <div class=\\\"field-group\\\">\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">VTR:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$empenhos=data.empenhos)===null||_data$empenhos===void 0?void 0:_data$empenhos.vtr)||'Não informado',\"</div>\\n            </div>\\n            <div class=\\\"field\\\">\\n                <div class=\\\"field-label\\\">Equipamentos:</div>\\n                <div class=\\\"field-value\\\">\").concat(((_data$empenhos2=data.empenhos)===null||_data$empenhos2===void 0?void 0:_data$empenhos2.equipamentos)||'Não informado',\"</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">6. EMPENHO - DESPACHADO</div>\\n        <div class=\\\"field\\\">\\n            <div class=\\\"field-label\\\">Data/Hora Despacho:</div>\\n            <div class=\\\"field-value\\\">\").concat(((_data$empenhos3=data.empenhos)===null||_data$empenhos3===void 0?void 0:_data$empenhos3.despachado)||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">7. EMPENHOS - EM DESLOCAMENTO</div>\\n        <div class=\\\"field\\\">\\n            <div class=\\\"field-label\\\">Status:</div>\\n            <div class=\\\"field-value\\\">\").concat(((_data$empenhos4=data.empenhos)===null||_data$empenhos4===void 0?void 0:_data$empenhos4.deslocamento)||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">8. EMPENHOS - CHEGADA NO LOCAL</div>\\n        <div class=\\\"field\\\">\\n            <div class=\\\"field-label\\\">Data/Hora Chegada:</div>\\n            <div class=\\\"field-value\\\">\").concat(((_data$empenhos5=data.empenhos)===null||_data$empenhos5===void 0?void 0:_data$empenhos5.chegadaLocal)||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">9. EMPENHOS - LIBERADO</div>\\n        <div class=\\\"field\\\">\\n            <div class=\\\"field-label\\\">Data/Hora Libera\\xE7\\xE3o:</div>\\n            <div class=\\\"field-value\\\">\").concat(((_data$empenhos6=data.empenhos)===null||_data$empenhos6===void 0?void 0:_data$empenhos6.liberado)||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">10. RELATOS</div>\\n        <div class=\\\"field full-width\\\">\\n            <div class=\\\"field-label\\\">Relatos Adicionais:</div>\\n            <div class=\\\"field-value\\\">\").concat(data.relatos||'Não informado',\"</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"footer\\\">\\n        <p>Relat\\xF3rio gerado automaticamente em \").concat(new Date().toLocaleString('pt-BR'),\"</p>\\n        <p>STTP - Sistema de Processamento de Ocorr\\xEAncias</p>\\n    </div>\\n</body>\\n</html>\");// Criar blob do HTML\nconst blob=new Blob([htmlContent],{type:'text/html'});const url=URL.createObjectURL(blob);// Criar link para download\nconst link=document.createElement('a');link.href=url;const timestamp=new Date().toISOString().replace(/[:.]/g,'-');link.download=\"relatorio_ocorrencia_\".concat(timestamp,\".html\");document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);return true;}catch(error){throw new Error('Falha ao gerar relatório');}};export const parseOccurrenceData=text=>{const dadosLocalizacaoExtraidos=extrairDadosLocalizacao(text);const result={numeroOcorrencia:extrairNumeroOcorrencia(text),naturezaInicial:extrairDadosGerais(text),narrativas:extrairNarrativas(text),dadosLocalizacao1:dadosLocalizacaoExtraidos.dadosLocalizacao1,dadosLocalizacao2:dadosLocalizacaoExtraidos.dadosLocalizacao2,empenhos:extrairEmpenhos(text),relatos:extrairRelatos(text)};return result;};// Função auxiliar para extração\nconst extractField=function(pattern,text){let defaultValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'Não informado';const match=text.match(pattern);return match?match[1].trim():defaultValue;};// Funções específicas para cada seção\nconst extrairNumeroOcorrencia=text=>{// *** EXTRAIR NÚMERO DA OCORRÊNCIA *** \\\\\nlet numeroOcorrencia='Não informado';const regexCompleto=/Ocorrência\\s*N°:\\s*([A-Z0-9-]+(?:\\s*[A-Z-]+)*)/;const matchCompleto=text.match(regexCompleto);if(matchCompleto){numeroOcorrencia=matchCompleto[1].replace(/\\s+/g,'');}else{const regexAlternativo=/N°:\\s*([A-Z0-9-]+(?:\\s+[A-Z-]+)*?)(?=\\s*[A-Z][a-z]|\\s*Data|$)/;const matchAlternativo=text.match(regexAlternativo);if(matchAlternativo){numeroOcorrencia=matchAlternativo[1].replace(/\\s+/g,'');}}if(numeroOcorrencia.endsWith('-')){const posicao=text.indexOf(numeroOcorrencia);if(posicao!==-1){const textoApos=text.substring(posicao+numeroOcorrencia.length,posicao+numeroOcorrencia.length+20);const matchResto=textoApos.match(/^([A-Z-]+)/);if(matchResto){numeroOcorrencia+=matchResto[1];}}}const padraoEspecifico=numeroOcorrencia.match(/^(CIMOB\\d+-\\d+-[A-Z]+-[A-Z]{3})/);if(padraoEspecifico){numeroOcorrencia=padraoEspecifico[1];}else{const padraoGenerico=numeroOcorrencia.match(/^([A-Z]+\\d+-\\d+-[A-Z]+-[A-Z]{3})/);if(padraoGenerico){numeroOcorrencia=padraoGenerico[1];}}return numeroOcorrencia;// ← ADICIONE ESTE RETURN\n};const extrairDadosGerais=text=>{// Usar lookahead mais específico ao invés de [^P]\nconst naturezaInicial=extractField(/Natureza\\s*Inicial:\\s*(.*?)(?=\\s*Prioridade\\s*:)/,text);return naturezaInicial.trim();};const extrairNarrativas=text=>{const descricaoNarrativa=extractField(/\"([^\"]+)\"/,text);return\"\\\"\".concat(descricaoNarrativa.trim(),\"\\\"\");};const extrairDadosLocalizacao=text=>{// Primeira coluna\nlet municipio=extractField(/Município\\/UF:\\s*([^L]+?)(?=\\s*Logradouro:)/,text);if(municipio==='Não informado'){municipio=extractField(/Município[^:]*:\\s*([^L]+)(?=Logradouro)/i,text);}// Melhorar extração do logradouro - tentar vários padrões\nlet logradouro=extractField(/Logradouro:\\s*([^B]+?)(?=\\s*Bairro:)/,text);if(logradouro==='Não informado'){// Tentar padrão alternativo sem lookahead específico\nlogradouro=extractField(/Logradouro:\\s*([^\\n\\r]+)/,text);if(logradouro!=='Não informado'){// Limpar possível texto que pode vir junto\nlogradouro=logradouro.replace(/\\s*Bairro:.*$/,'').trim();}}let bairro=extractField(/Bairro:\\s*([^C]+?)(?=\\s*Complemento)/,text);if(bairro==='Não informado'){bairro=extractField(/Bairro[^:]*:\\s*([^L]+)(?=Complemento)/i,text);}let complemento=extractField(/Complemento:\\s*([^T]+?)(?=\\s*Tipo\\s*de\\s*Local:)/,text);if(complemento==='Não informado'){complemento=extractField(/Complemento[^:]*:\\s*([^L]+)(?=Local)/i,text);}const tipoLocal=extractField(/Tipo\\s*de\\s*Local:\\s*([^T]+?)(?=\\s*Tipo\\s*de\\s*Via:)/,text);// Segunda coluna\nconst tipoVia=extractField(/Tipo\\s*de\\s*Via:\\s*([^N]+?)(?=\\s*Número:)/,text);const numero=extractField(/Número:\\s*([^C]+?)(?=\\s*CEP:)/,text);const cep=extractField(/CEP:\\s*([^P]+?)(?=\\s*Ponto\\s*de\\s*Referência:)/,text);const pontoReferencia=extractField(/Ponto\\s*de\\s*Referência:\\s*([^\\r\\n]+?)(?=\\s*Lat\\s*\\/\\s*Long:)/,text);// Extrair Lat/Long com formato específico: -7.220458900000001 , -7.220458900000001\nconst latLongCompleto=extractField(/Lat\\s*\\/\\s*Long:\\s*([^N]+?)(?=\\s*Narrativas)/,text);// Separar latitude e longitude\nlet latitude='Não informado';let longitude='Não informado';if(latLongCompleto!=='Não informado'){// Buscar padrão: número , espaço , número\nconst coordenadasMatch=latLongCompleto.match(/([-]?\\d+\\.?\\d*)\\s*,\\s*([-]?\\d+\\.?\\d*)/);if(coordenadasMatch){latitude=coordenadasMatch[1].trim();longitude=coordenadasMatch[2].trim();}}return{// Dados principais (primeira seção)\ndadosLocalizacao1:{municipio:municipio.trim(),logradouro:logradouro.trim(),bairro:bairro.trim(),complemento:complemento.trim(),tipoLocal:tipoLocal.trim()},// Dados detalhados (segunda seção)\ndadosLocalizacao2:{tipoVia:tipoVia.trim(),numero:numero.trim(),cep:cep.trim(),pontoReferencia:pontoReferencia.trim(),latitude,longitude}};};const organizarDadosPessoal=conteudo=>{// Separar a primeira linha (unidade) do resto\nconst linhas=conteudo.split(/[\\r\\n]/);const primeiraLinha=linhas[0].replace(/\\s+/g,' ').trim();// Extrair todos os valores de cada categoria\nconst nomes=[];const cargos=[];const funcoes=[];const matriculas=[];// Usar regex para capturar todos os valores\nconst nomesMatch=conteudo.match(/Nome funcional:\\s*([^\\r\\n]+)/g);if(nomesMatch){nomesMatch.forEach(match=>{const nome=match.replace('Nome funcional:','').trim();if(nome)nomes.push(nome);});}const cargosMatch=conteudo.match(/Cargo:\\s*([^\\r\\n]+)/g);if(cargosMatch){cargosMatch.forEach(match=>{const cargo=match.replace('Cargo:','').trim();if(cargo)cargos.push(cargo);});}const funcoesMatch=conteudo.match(/Função:\\s*([^\\r\\n]+)/g);if(funcoesMatch){funcoesMatch.forEach(match=>{const funcao=match.replace('Função:','').trim();if(funcao)funcoes.push(funcao);});}const matriculasMatch=conteudo.match(/Matrícula:\\s*([^\\r\\n]+)/g);if(matriculasMatch){matriculasMatch.forEach(match=>{const matricula=match.replace('Matrícula:','').trim();if(matricula)matriculas.push(matricula);});}// Organizar por pessoa, uma informação embaixo da outra\nlet resultado=primeiraLinha;const maxPessoas=Math.max(nomes.length,cargos.length,funcoes.length,matriculas.length);for(let i=0;i<maxPessoas;i++){if(nomes[i])resultado+=\"\\nNome funcional: \".concat(nomes[i]);if(cargos[i])resultado+=\"\\nCargo: \".concat(cargos[i]);if(funcoes[i])resultado+=\"\\nFun\\xE7\\xE3o: \".concat(funcoes[i]);if(matriculas[i])resultado+=\"\\nMatr\\xEDcula: \".concat(matriculas[i]);// Adicionar linha em branco entre pessoas (se houver mais de uma)\nif(i<maxPessoas-1&&maxPessoas>1){resultado+='\\n';}}return resultado;};const extrairEmpenhos=text=>{// Verificar se não há empenho\nif(text.includes('Ocorrência Não Empenhada')){return{vtr:'Ocorrência Não Empenhada',equipamentos:'N/A',despachado:'Não informado',deslocamento:'Não informado',chegadaLocal:'Não informado',liberado:'Não informado'};}const secaoEmpenhos=extractField(/Empenhos:?\\s+([^]*?)(?=\\s*Dados)/,text);if(secaoEmpenhos==='Não informado'){return{vtr:'Nenhum empenho encontrado',equipamentos:'N/A',despachado:'N/A',deslocamento:'N/A',chegadaLocal:'N/A',liberado:'N/A'};}// Extrair unidade (VTR/Ram/etc.) - capturar tudo entre início e \"Equipamento(s):\"\nlet vtr='N/A';// Capturar todo o conteúdo antes de \"Equipamento(s):\"\nconst unidadeCompleta=secaoEmpenhos.match(/^([\\s\\S]*?)(?=Equipamento\\(s\\):)/m);if(unidadeCompleta){const conteudo=unidadeCompleta[1].trim();// Verificar se contém informações de pessoal (nomes funcionais, cargos, etc.)\nif(conteudo.includes('Nome funcional:')||conteudo.includes('Cargo:')||conteudo.includes('Função:')||conteudo.includes('Matrícula:')){vtr=organizarDadosPessoal(conteudo);}else{// Caso normal - apenas primeira linha\nconst primeiraLinha=conteudo.split(/[\\r\\n]/)[0];vtr=primeiraLinha.replace(/\\s+/g,' ').trim();}}// Extrair equipamentos - aceitar diferentes valores até o próximo campo\nconst equipMatch=secaoEmpenhos.match(/Equipamento\\(s\\):\\s*([^\\n\\r]+?)(?=\\s*Despachado|\\n\\s*Despachado|$)/i);const equipamentos=equipMatch?equipMatch[1].replace(/\\s+/g,' ').trim():'N/A';// Extrair tempos com regex mais precisas para evitar duplicação\nconst despachado=extractField(/Despachado:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/,secaoEmpenhos)||'N/A';const deslocamento=extractField(/Em\\s*Deslocamento:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/,secaoEmpenhos)||'N/A';// Para chegada no local - usar regex específica para data/hora\nconst chegadaLocal=extractField(/Chegada\\s*no\\s*Local:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/,secaoEmpenhos)||'N/A';const liberado=extractField(/Liberado:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/,secaoEmpenhos)||'N/A';return{vtr:vtr,equipamentos:equipamentos,despachado:despachado,deslocamento:deslocamento,chegadaLocal:chegadaLocal,liberado:liberado};};const extrairRelatos=text=>{// Verificar se existe a seção Relatos\nif(!text.includes('Relatos')){return'Nenhum relato adicional';}const textoRelato=extractField(/\"([^\"]+)\"/,text.substring(text.indexOf('Relatos')));let resultado='';resultado+=\"\\\"\".concat(textoRelato.trim(),\"\\\"\");return resultado;};","map":{"version":3,"names":["loadPDFJS","Promise","resolve","reject","window","pdfjsLib","script","document","createElement","src","onload","Error","onerror","head","appendChild","extractDataFromPDF","file","GlobalWorkerOptions","workerSrc","arrayBuffer","pdf","getDocument","promise","fullText","i","numPages","page","getPage","textContent","getTextContent","pageText","items","map","item","str","join","extractedData","parseOccurrenceData","error","message","formatDataForBackend","_extractedData$dadosL","_extractedData$dadosL2","_extractedData$dadosL3","_extractedData$dadosL4","_extractedData$dadosL5","backendData","numeroOcorrencia","natureza","naturezaInicial","narrativas","localizacao","logradouro","dadosLocalizacao1","bairro","pontoReferencia","dadosLocalizacao2","lat","latitude","long","longitude","empenhos","relatos","vtr","empenhoData","equipamentos","despachado","deslocamento","chegadaLocal","liberado","push","saveDataToBackend","salvarOcorrencia","formattedData","result","generateNewPDF","data","_data$dadosLocalizaca","_data$dadosLocalizaca2","_data$dadosLocalizaca3","_data$dadosLocalizaca4","_data$dadosLocalizaca5","_data$dadosLocalizaca6","_data$dadosLocalizaca7","_data$dadosLocalizaca8","_data$dadosLocalizaca9","_data$dadosLocalizaca0","_data$dadosLocalizaca1","_data$empenhos","_data$empenhos2","_data$empenhos3","_data$empenhos4","_data$empenhos5","_data$empenhos6","htmlContent","concat","dataHora","municipio","complemento","tipoLocal","tipoVia","numero","cep","Date","toLocaleString","blob","Blob","type","url","URL","createObjectURL","link","href","timestamp","toISOString","replace","download","body","click","removeChild","revokeObjectURL","text","dadosLocalizacaoExtraidos","extrairDadosLocalizacao","extrairNumeroOcorrencia","extrairDadosGerais","extrairNarrativas","extrairEmpenhos","extrairRelatos","extractField","pattern","defaultValue","arguments","length","undefined","match","trim","regexCompleto","matchCompleto","regexAlternativo","matchAlternativo","endsWith","posicao","indexOf","textoApos","substring","matchResto","padraoEspecifico","padraoGenerico","descricaoNarrativa","latLongCompleto","coordenadasMatch","organizarDadosPessoal","conteudo","linhas","split","primeiraLinha","nomes","cargos","funcoes","matriculas","nomesMatch","forEach","nome","cargosMatch","cargo","funcoesMatch","funcao","matriculasMatch","matricula","resultado","maxPessoas","Math","max","includes","secaoEmpenhos","unidadeCompleta","equipMatch","textoRelato"],"sources":["/Users/lohuamalima/Desktop/sttp/ocorrencias-de-transito/src/utils/pdfUtils.js"],"sourcesContent":["// Funções para manipulação e processamento de PDF\n\nexport const loadPDFJS = () => {\n    return new Promise((resolve, reject) => {\n        if (window.pdfjsLib) {\n            resolve();\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js';\n        script.onload = () => {\n            if (window.pdfjsLib) {\n                resolve();\n            } else {\n                reject(new Error('Falha ao carregar PDF.js'));\n            }\n        };\n        script.onerror = () => reject(new Error('Erro ao carregar PDF.js'));\n        document.head.appendChild(script);\n    });\n};\n\nexport const extractDataFromPDF = async (file) => {\n    try {\n        // Carregar PDF.js via script tag\n        if (!window.pdfjsLib) {\n            await loadPDFJS();\n        }\n\n        // Configurar worker\n        window.pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';\n\n        // Converter arquivo para ArrayBuffer\n        const arrayBuffer = await file.arrayBuffer();\n\n        // Carregar PDF\n        const pdf = await window.pdfjsLib.getDocument(arrayBuffer).promise;\n\n        let fullText = '';\n\n        // Extrair texto de todas as páginas\n        for (let i = 1; i <= pdf.numPages; i++) {\n            const page = await pdf.getPage(i);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items.map(item => item.str).join(' ');\n            fullText += pageText + '\\n';\n        }\n\n        // Processar texto extraído usando regex e parsing manual\n        const extractedData = parseOccurrenceData(fullText);\n\n        return extractedData;\n    } catch (error) {\n        throw new Error('Falha ao processar o PDF: ' + error.message);\n    }\n};\n\n// Função para transformar dados extraídos no formato esperado pelo backend\nexport const formatDataForBackend = (extractedData) => {\n    const backendData = {\n        numeroOcorrencia: extractedData.numeroOcorrencia || '',\n        natureza: extractedData.naturezaInicial || '',\n        narrativas: extractedData.narrativas || '',\n        localizacao: {\n            logradouro: extractedData.dadosLocalizacao1?.logradouro || '',\n            bairro: extractedData.dadosLocalizacao1?.bairro || '',\n            pontoReferencia: extractedData.dadosLocalizacao2?.pontoReferencia || '',\n            lat: extractedData.dadosLocalizacao2?.latitude || '',\n            long: extractedData.dadosLocalizacao2?.longitude || ''\n        },\n        empenhos: [],\n        relatos: ''\n    };\n\n    // Processar empenhos se existirem dados\n    if (extractedData.empenhos && extractedData.empenhos.vtr !== 'Ocorrência Não Empenhada') {\n        const empenhoData = {\n            vtr: extractedData.empenhos.vtr || '',\n            equipamentos: extractedData.empenhos.equipamentos || '',\n            despachado: extractedData.empenhos.despachado || '',\n            deslocamento: extractedData.empenhos.deslocamento || '',\n            chegadaLocal: extractedData.empenhos.chegadaLocal || '',\n            liberado: extractedData.empenhos.liberado || ''\n        };\n        backendData.empenhos.push(empenhoData);\n    }\n\n    // Processar relatos - agora como string simples\n    if (extractedData.relatos && extractedData.relatos !== 'Nenhum relato adicional') {\n        backendData.relatos = extractedData.relatos;\n    }\n\n    return backendData;\n};\n\nexport const saveDataToBackend = async (extractedData) => {\n    try {\n        // Importar o service dinamicamente para evitar problemas de dependência circular\n        const { salvarOcorrencia } = await import('../service/UserService');\n        \n        // Transformar dados para o formato esperado pelo backend\n        const formattedData = formatDataForBackend(extractedData);\n        \n        // Log para debug - mostrar como ficou o JSON\n\n        // Usar o service para manter a padronização e incluir o token automaticamente\n        const result = await salvarOcorrencia(formattedData);\n        \n        // Log da resposta do backend\n        \n        return result;\n    } catch (error) {\n        throw new Error('Falha ao salvar dados no sistema: ' + error.message);\n    }\n};\n\nexport const generateNewPDF = async (data) => {\n    try {\n        const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Relatório de Ocorrência</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 0;\n            padding: 20px;\n            font-size: 12px;\n            line-height: 1.4;\n        }\n        .header {\n            text-align: center;\n            margin-bottom: 30px;\n            border-bottom: 2px solid #333;\n            padding-bottom: 15px;\n        }\n        .header h1 {\n            margin: 0;\n            font-size: 18px;\n            color: #333;\n        }\n        .header p {\n            margin: 5px 0;\n            color: #666;\n        }\n        .section {\n            margin-bottom: 20px;\n            page-break-inside: avoid;\n        }\n        .section-title {\n            background-color: #f0f0f0;\n            padding: 8px 12px;\n            font-weight: bold;\n            border-left: 4px solid #2563eb;\n            margin-bottom: 10px;\n        }\n        .field-group {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 15px;\n            margin-bottom: 10px;\n        }\n        .field {\n            flex: 1;\n            min-width: 200px;\n        }\n        .field-label {\n            font-weight: bold;\n            color: #333;\n        }\n        .field-value {\n            color: #555;\n            margin-top: 2px;\n        }\n        .full-width {\n            width: 100%;\n        }\n        .footer {\n            margin-top: 40px;\n            text-align: center;\n            font-size: 10px;\n            color: #888;\n            border-top: 1px solid #ddd;\n            padding-top: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>Central de Atendimento e Despacho</h1>\n        <p>Superintendência de Trânsito e Transportes Públicos</p>\n        <p>Relatório de Ocorrência Reorganizado</p>\n        <p><strong>Ocorrência N°:</strong> ${data.numeroOcorrencia || 'Não informado'}</p>\n        <p><strong>Data/Hora:</strong> ${data.dataHora || 'Não informado'}</p>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">1. NATUREZA INICIAL</div>\n        <div class=\"field\">\n            <div class=\"field-label\">Natureza:</div>\n            <div class=\"field-value\">${data.naturezaInicial || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">2. NARRATIVAS</div>\n        <div class=\"field full-width\">\n            <div class=\"field-label\">Descrição:</div>\n            <div class=\"field-value\">${data.narrativas || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">3. DADOS DA LOCALIZAÇÃO (PRINCIPAL)</div>\n        <div class=\"field-group\">\n            <div class=\"field\">\n                <div class=\"field-label\">Município:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao1?.municipio || 'Não informado'}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"field-label\">Logradouro:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao1?.logradouro || 'Não informado'}</div>\n            </div>\n        </div>\n        <div class=\"field-group\">\n            <div class=\"field\">\n                <div class=\"field-label\">Bairro:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao1?.bairro || 'Não informado'}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"field-label\">Complemento:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao1?.complemento || 'Não informado'}</div>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"field-label\">Tipo de Local:</div>\n            <div class=\"field-value\">${data.dadosLocalizacao1?.tipoLocal || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">4. DADOS DA LOCALIZAÇÃO (DETALHES)</div>\n        <div class=\"field-group\">\n            <div class=\"field\">\n                <div class=\"field-label\">Tipo de Via:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao2?.tipoVia || 'Não informado'}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"field-label\">Número:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao2?.numero || 'Não informado'}</div>\n            </div>\n        </div>\n        <div class=\"field-group\">\n            <div class=\"field\">\n                <div class=\"field-label\">CEP:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao2?.cep || 'Não informado'}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"field-label\">Ponto de Referência:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao2?.pontoReferencia || 'Não informado'}</div>\n            </div>\n        </div>\n        <div class=\"field-group\">\n            <div class=\"field\">\n                <div class=\"field-label\">Latitude:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao2?.latitude || 'Não informado'}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"field-label\">Longitude:</div>\n                <div class=\"field-value\">${data.dadosLocalizacao2?.longitude || 'Não informado'}</div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">5. EMPENHOS - VTR E EQUIPAMENTOS</div>\n        <div class=\"field-group\">\n            <div class=\"field\">\n                <div class=\"field-label\">VTR:</div>\n                <div class=\"field-value\">${data.empenhos?.vtr || 'Não informado'}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"field-label\">Equipamentos:</div>\n                <div class=\"field-value\">${data.empenhos?.equipamentos || 'Não informado'}</div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">6. EMPENHO - DESPACHADO</div>\n        <div class=\"field\">\n            <div class=\"field-label\">Data/Hora Despacho:</div>\n            <div class=\"field-value\">${data.empenhos?.despachado || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">7. EMPENHOS - EM DESLOCAMENTO</div>\n        <div class=\"field\">\n            <div class=\"field-label\">Status:</div>\n            <div class=\"field-value\">${data.empenhos?.deslocamento || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">8. EMPENHOS - CHEGADA NO LOCAL</div>\n        <div class=\"field\">\n            <div class=\"field-label\">Data/Hora Chegada:</div>\n            <div class=\"field-value\">${data.empenhos?.chegadaLocal || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">9. EMPENHOS - LIBERADO</div>\n        <div class=\"field\">\n            <div class=\"field-label\">Data/Hora Liberação:</div>\n            <div class=\"field-value\">${data.empenhos?.liberado || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section-title\">10. RELATOS</div>\n        <div class=\"field full-width\">\n            <div class=\"field-label\">Relatos Adicionais:</div>\n            <div class=\"field-value\">${data.relatos || 'Não informado'}</div>\n        </div>\n    </div>\n\n    <div class=\"footer\">\n        <p>Relatório gerado automaticamente em ${new Date().toLocaleString('pt-BR')}</p>\n        <p>STTP - Sistema de Processamento de Ocorrências</p>\n    </div>\n</body>\n</html>`;\n\n        // Criar blob do HTML\n        const blob = new Blob([htmlContent], { type: 'text/html' });\n        const url = URL.createObjectURL(blob);\n\n        // Criar link para download\n        const link = document.createElement('a');\n        link.href = url;\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n        link.download = `relatorio_ocorrencia_${timestamp}.html`;\n\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n\n        return true;\n    } catch (error) {\n        throw new Error('Falha ao gerar relatório');\n    }\n};\n\nexport const parseOccurrenceData = (text) => {\n    \n    const dadosLocalizacaoExtraidos = extrairDadosLocalizacao(text);\n    \n    const result = {\n        numeroOcorrencia: extrairNumeroOcorrencia(text),\n        naturezaInicial: extrairDadosGerais(text),\n        narrativas: extrairNarrativas(text),\n        dadosLocalizacao1: dadosLocalizacaoExtraidos.dadosLocalizacao1,\n        dadosLocalizacao2: dadosLocalizacaoExtraidos.dadosLocalizacao2,\n        empenhos: extrairEmpenhos(text),\n        relatos: extrairRelatos(text)\n    };\n\n    return result;\n};\n\n// Função auxiliar para extração\nconst extractField = (pattern, text, defaultValue = 'Não informado') => {\n    const match = text.match(pattern);\n    return match ? match[1].trim() : defaultValue;\n};\n\n// Funções específicas para cada seção\nconst extrairNumeroOcorrencia = (text) => {\n    // *** EXTRAIR NÚMERO DA OCORRÊNCIA *** \\\\\n    let numeroOcorrencia = 'Não informado';\n    const regexCompleto = /Ocorrência\\s*N°:\\s*([A-Z0-9-]+(?:\\s*[A-Z-]+)*)/;\n    const matchCompleto = text.match(regexCompleto);\n\n    if (matchCompleto) {\n        numeroOcorrencia = matchCompleto[1].replace(/\\s+/g, '');\n    } else {\n        const regexAlternativo = /N°:\\s*([A-Z0-9-]+(?:\\s+[A-Z-]+)*?)(?=\\s*[A-Z][a-z]|\\s*Data|$)/;\n        const matchAlternativo = text.match(regexAlternativo);\n\n        if (matchAlternativo) {\n            numeroOcorrencia = matchAlternativo[1].replace(/\\s+/g, '');\n        }\n    }\n    \n    if (numeroOcorrencia.endsWith('-')) {\n        const posicao = text.indexOf(numeroOcorrencia);\n        if (posicao !== -1) {\n            const textoApos = text.substring(posicao + numeroOcorrencia.length, posicao + numeroOcorrencia.length + 20);\n            const matchResto = textoApos.match(/^([A-Z-]+)/);\n            if (matchResto) {\n                numeroOcorrencia += matchResto[1];\n            }\n        }\n    }\n\n    const padraoEspecifico = numeroOcorrencia.match(/^(CIMOB\\d+-\\d+-[A-Z]+-[A-Z]{3})/);\n    if (padraoEspecifico) {\n        numeroOcorrencia = padraoEspecifico[1];\n    } else {\n        const padraoGenerico = numeroOcorrencia.match(/^([A-Z]+\\d+-\\d+-[A-Z]+-[A-Z]{3})/);\n        if (padraoGenerico) {\n            numeroOcorrencia = padraoGenerico[1];\n        }\n    }\n    \n    return numeroOcorrencia; // ← ADICIONE ESTE RETURN\n};\n\nconst extrairDadosGerais = (text) => {\n    // Usar lookahead mais específico ao invés de [^P]\n    const naturezaInicial = extractField(/Natureza\\s*Inicial:\\s*(.*?)(?=\\s*Prioridade\\s*:)/, text);\n\n    return naturezaInicial.trim();\n};\n\nconst extrairNarrativas = (text) => {\n    const descricaoNarrativa = extractField(/\"([^\"]+)\"/, text);\n    \n    return `\"${descricaoNarrativa.trim()}\"`; \n};\n\nconst extrairDadosLocalizacao = (text) => {\n    // Primeira coluna\n    let municipio = extractField(/Município\\/UF:\\s*([^L]+?)(?=\\s*Logradouro:)/, text);\n    \n    if (municipio === 'Não informado') {\n        municipio = extractField(/Município[^:]*:\\s*([^L]+)(?=Logradouro)/i, text);\n    }\n    \n    // Melhorar extração do logradouro - tentar vários padrões\n    let logradouro = extractField(/Logradouro:\\s*([^B]+?)(?=\\s*Bairro:)/, text);\n    if (logradouro === 'Não informado') {\n        // Tentar padrão alternativo sem lookahead específico\n        logradouro = extractField(/Logradouro:\\s*([^\\n\\r]+)/, text);\n        if (logradouro !== 'Não informado') {\n            // Limpar possível texto que pode vir junto\n            logradouro = logradouro.replace(/\\s*Bairro:.*$/, '').trim();\n        }\n    }\n    \n    let bairro = extractField(/Bairro:\\s*([^C]+?)(?=\\s*Complemento)/, text);\n    if (bairro === 'Não informado') {\n        bairro = extractField(/Bairro[^:]*:\\s*([^L]+)(?=Complemento)/i, text);\n    }\n    \n    let complemento = extractField(/Complemento:\\s*([^T]+?)(?=\\s*Tipo\\s*de\\s*Local:)/, text);\n    if (complemento === 'Não informado') {\n        complemento = extractField(/Complemento[^:]*:\\s*([^L]+)(?=Local)/i, text);\n    }\n    const tipoLocal = extractField(/Tipo\\s*de\\s*Local:\\s*([^T]+?)(?=\\s*Tipo\\s*de\\s*Via:)/, text);\n\n    // Segunda coluna\n    const tipoVia = extractField(/Tipo\\s*de\\s*Via:\\s*([^N]+?)(?=\\s*Número:)/, text);\n    const numero = extractField(/Número:\\s*([^C]+?)(?=\\s*CEP:)/, text);\n    const cep = extractField(/CEP:\\s*([^P]+?)(?=\\s*Ponto\\s*de\\s*Referência:)/, text);\n    const pontoReferencia = extractField(/Ponto\\s*de\\s*Referência:\\s*([^\\r\\n]+?)(?=\\s*Lat\\s*\\/\\s*Long:)/, text);\n    \n    // Extrair Lat/Long com formato específico: -7.220458900000001 , -7.220458900000001\n    const latLongCompleto = extractField(/Lat\\s*\\/\\s*Long:\\s*([^N]+?)(?=\\s*Narrativas)/, text);\n    \n    // Separar latitude e longitude\n    let latitude = 'Não informado';\n    let longitude = 'Não informado';\n    \n    if (latLongCompleto !== 'Não informado') {\n        // Buscar padrão: número , espaço , número\n        const coordenadasMatch = latLongCompleto.match(/([-]?\\d+\\.?\\d*)\\s*,\\s*([-]?\\d+\\.?\\d*)/);\n        if (coordenadasMatch) {\n            latitude = coordenadasMatch[1].trim();\n            longitude = coordenadasMatch[2].trim();\n        }\n    }\n\n    return {\n        // Dados principais (primeira seção)\n        dadosLocalizacao1: {\n            municipio: municipio.trim(),\n            logradouro: logradouro.trim(),\n            bairro: bairro.trim(),\n            complemento: complemento.trim(),\n            tipoLocal: tipoLocal.trim()\n        },\n        // Dados detalhados (segunda seção)\n        dadosLocalizacao2: {\n            tipoVia: tipoVia.trim(),\n            numero: numero.trim(),\n            cep: cep.trim(),\n            pontoReferencia: pontoReferencia.trim(),\n            latitude,\n            longitude\n        }\n    };\n};\n\nconst organizarDadosPessoal = (conteudo) => {\n    // Separar a primeira linha (unidade) do resto\n    const linhas = conteudo.split(/[\\r\\n]/);\n    const primeiraLinha = linhas[0].replace(/\\s+/g, ' ').trim();\n    \n    // Extrair todos os valores de cada categoria\n    const nomes = [];\n    const cargos = [];\n    const funcoes = [];\n    const matriculas = [];\n    \n    // Usar regex para capturar todos os valores\n    const nomesMatch = conteudo.match(/Nome funcional:\\s*([^\\r\\n]+)/g);\n    if (nomesMatch) {\n        nomesMatch.forEach(match => {\n            const nome = match.replace('Nome funcional:', '').trim();\n            if (nome) nomes.push(nome);\n        });\n    }\n    \n    const cargosMatch = conteudo.match(/Cargo:\\s*([^\\r\\n]+)/g);\n    if (cargosMatch) {\n        cargosMatch.forEach(match => {\n            const cargo = match.replace('Cargo:', '').trim();\n            if (cargo) cargos.push(cargo);\n        });\n    }\n    \n    const funcoesMatch = conteudo.match(/Função:\\s*([^\\r\\n]+)/g);\n    if (funcoesMatch) {\n        funcoesMatch.forEach(match => {\n            const funcao = match.replace('Função:', '').trim();\n            if (funcao) funcoes.push(funcao);\n        });\n    }\n    \n    const matriculasMatch = conteudo.match(/Matrícula:\\s*([^\\r\\n]+)/g);\n    if (matriculasMatch) {\n        matriculasMatch.forEach(match => {\n            const matricula = match.replace('Matrícula:', '').trim();\n            if (matricula) matriculas.push(matricula);\n        });\n    }\n    \n    // Organizar por pessoa, uma informação embaixo da outra\n    let resultado = primeiraLinha;\n    const maxPessoas = Math.max(nomes.length, cargos.length, funcoes.length, matriculas.length);\n    \n    for (let i = 0; i < maxPessoas; i++) {\n        if (nomes[i]) resultado += `\\nNome funcional: ${nomes[i]}`;\n        if (cargos[i]) resultado += `\\nCargo: ${cargos[i]}`;\n        if (funcoes[i]) resultado += `\\nFunção: ${funcoes[i]}`;\n        if (matriculas[i]) resultado += `\\nMatrícula: ${matriculas[i]}`;\n        \n        // Adicionar linha em branco entre pessoas (se houver mais de uma)\n        if (i < maxPessoas - 1 && maxPessoas > 1) {\n            resultado += '\\n';\n        }\n    }\n    \n    return resultado;\n};\n\nconst extrairEmpenhos = (text) => {\n    // Verificar se não há empenho\n    if (text.includes('Ocorrência Não Empenhada')) {\n        return {\n            vtr: 'Ocorrência Não Empenhada',\n            equipamentos: 'N/A',\n            despachado: 'Não informado',\n            deslocamento: 'Não informado',\n            chegadaLocal: 'Não informado',\n            liberado: 'Não informado'\n        };\n    }\n\n    const secaoEmpenhos = extractField(/Empenhos:?\\s+(.*?)(?=\\s*Dados)/s, text);\n    \n    if (secaoEmpenhos === 'Não informado') {\n        return {\n            vtr: 'Nenhum empenho encontrado',\n            equipamentos: 'N/A',\n            despachado: 'N/A',\n            deslocamento: 'N/A',\n            chegadaLocal: 'N/A',\n            liberado: 'N/A'\n        };\n    }\n\n    // Extrair unidade (VTR/Ram/etc.) - capturar tudo entre início e \"Equipamento(s):\"\n    let vtr = 'N/A';\n    \n    // Capturar todo o conteúdo antes de \"Equipamento(s):\"\n    const unidadeCompleta = secaoEmpenhos.match(/^([\\s\\S]*?)(?=Equipamento\\(s\\):)/m);\n    if (unidadeCompleta) {\n        const conteudo = unidadeCompleta[1].trim();\n        \n        // Verificar se contém informações de pessoal (nomes funcionais, cargos, etc.)\n        if (conteudo.includes('Nome funcional:') || conteudo.includes('Cargo:') || conteudo.includes('Função:') || conteudo.includes('Matrícula:')) {\n            vtr = organizarDadosPessoal(conteudo);\n        } else {\n            // Caso normal - apenas primeira linha\n            const primeiraLinha = conteudo.split(/[\\r\\n]/)[0];\n            vtr = primeiraLinha.replace(/\\s+/g, ' ').trim();\n        }\n    }\n    \n    // Extrair equipamentos - aceitar diferentes valores até o próximo campo\n    const equipMatch = secaoEmpenhos.match(/Equipamento\\(s\\):\\s*([^\\n\\r]+?)(?=\\s*Despachado|\\n\\s*Despachado|$)/i);\n    const equipamentos = equipMatch ? equipMatch[1].replace(/\\s+/g, ' ').trim() : 'N/A';\n    \n    // Extrair tempos com regex mais precisas para evitar duplicação\n    const despachado = extractField(/Despachado:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/, secaoEmpenhos) || 'N/A';\n    \n    const deslocamento = extractField(/Em\\s*Deslocamento:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/, secaoEmpenhos) || 'N/A';\n    \n    // Para chegada no local - usar regex específica para data/hora\n    const chegadaLocal = extractField(/Chegada\\s*no\\s*Local:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/, secaoEmpenhos) || 'N/A';\n    \n    const liberado = extractField(/Liberado:\\s*(\\d{2}\\/\\d{2}\\/\\d{4}\\s*às\\s*\\d{2}:\\d{2})/, secaoEmpenhos) || 'N/A';\n    \n    return {\n        vtr: vtr,\n        equipamentos: equipamentos,\n        despachado: despachado,\n        deslocamento: deslocamento, \n        chegadaLocal: chegadaLocal,\n        liberado: liberado\n    };\n};\n\nconst extrairRelatos = (text) => {\n    // Verificar se existe a seção Relatos\n    if (!text.includes('Relatos')) {\n        return 'Nenhum relato adicional';\n    }\n    \n    const textoRelato = extractField(/\"([^\"]+)\"/, text.substring(text.indexOf('Relatos')));\n    \n    let resultado = '';\n    \n  \n    \n    resultado += `\"${textoRelato.trim()}\"`;\n    \n    return resultado;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}